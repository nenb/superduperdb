name: Release
on:  # rules for when this action will be triggered
  push:
    paths-ignore:  # ignore docs in this action - handled in a separate action
      - 'docs/**'
      - '*.md'
      - '*.rst'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '*.rst'
  workflow_dispatch:  # allows triggering a github action manually - see 'Actions' tab

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
        run:
          shell: bash
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Set up Python 3.10
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
 
      - name: Install dependencies
        run: python -m pip install --upgrade build

      - name: Build
        run: python -m build

        # make sure wheel is not empty etc
      - name: Check wheel contents
        run: |
          python -m pip install check-wheel-contents
          check-wheel-contents dist
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./dist

  test-build:
    needs: ['build']
    # TODO: decide whether it's worth it to run tests on multiple OSes
    runs-on: ubuntu-latest
    steps:

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
              
        # Artifacts located in artifact/
      - name: Download artifact
        uses: actions/download-artifact@v3

      - name: Install wheel
        run: pip install artifact/*.whl
      
      - name: Test application runs correctly
        run: python -m superduperdb serve

      - name: Set version for tagging
        id: set-version
        run: |
          export PACKAGE_VERSION=$(python -c "import superduperdb as s; print(s.__version__)")
          echo "::set-output name=package_version::${PACKAGE_VERSION}"

    outputs:
      package_version: ${{ steps.set-version.outputs.package_version }}
  
  create-release:
    needs: ['test-build']
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      
        # Artifacts located in artifact/
      - name: Download artifact
        uses: actions/download-artifact@v3

      - name: create release
        run: >
          gh release create ${{ needs.test-build.outputs.package_version }}
          --repo ${{ github.repository }} --generate-notes
          artifact/*
        env:
          GH_TOKEN: ${{ github.token }}

# UPLOAD TO PYPI
# publish-pypi:
#   needs: ['provenance']
#   # Wait for approval before attempting to upload to PyPI. This allows reviewing the
#   # files in the draft release.
#   environment: 'publish'
#   runs-on: ubuntu-latest
#   permissions:
#     id-token: write
#   steps:
#     - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a
#     # Try uploading to Test PyPI first, in case something fails.
#     - uses: pypa/gh-action-pypi-publish@f8c70e705ffc13c3b4d1221169b84f12a75d6ca8
#       with:
#         repository-url: https://test.pypi.org/legacy/
#         packages-dir: artifact/
#     - uses: pypa/gh-action-pypi-publish@f8c70e705ffc13c3b4d1221169b84f12a75d6ca8
#       with:
#         packages-dir: artifact/