"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[2054],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),d=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=d(e.components);return r.createElement(p.Provider,{value:n},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),l=d(t),m=o,g=l["".concat(p,".").concat(m)]||l[m]||u[m]||a;return t?r.createElement(g,i(i({ref:n},c),{},{components:t})):r.createElement(g,i({ref:n},c))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[l]="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1325:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=t(87462),o=(t(67294),t(3905));const a={sidebar_position:2},i="Encoders",s={unversionedId:"docs/usage/encoders",id:"docs/usage/encoders",title:"Encoders",description:"The Encoder class allows SuperDuperDB to store Python objects in the DB,",source:"@site/content/docs/usage/encoders.md",sourceDirName:"docs/usage",slug:"/docs/usage/encoders",permalink:"/docs/docs/usage/encoders",draft:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/tree/main/docs/content/docs/usage/encoders.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"DB",permalink:"/docs/docs/usage/db"},next:{title:"Models",permalink:"/docs/docs/usage/models"}},p={},d=[],c={toc:d},l="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(l,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"encoders"},"Encoders"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Encoder")," class allows SuperDuperDB to store Python objects in the ",(0,o.kt)("inlineCode",{parentName:"p"},"DB"),",\nand to recall them in the same format in which they were stored.")),(0,o.kt)("p",null,"SuperDuperDB supports insertion of any standard datatypes supported by the underlying database.\nHowever, in many AI use-cases, these data-types are not sufficient for the intended data.\nA typical example is computer-vision use-cases, utilizing ",(0,o.kt)("inlineCode",{parentName:"p"},".jpg")," or ",(0,o.kt)("inlineCode",{parentName:"p"},".png")," images,\nfor which datastores do not typically not provide native support."),(0,o.kt)("p",null,"In order to use such complex data, SuperDuperDB provides the ",(0,o.kt)("inlineCode",{parentName:"p"},"Encoder")," abstraction.\nUsers may create their own encoders with SuperDuperDB using this abstraction directly,\nand register these encoders with SuperDuperDB using ",(0,o.kt)("inlineCode",{parentName:"p"},"db.add"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import pickle\nfrom superduperdb.container.encoder import Encoder\n\ne = Encoder('my-encoder', encode=pickle.dumps, decode=pickle.loads)\n")),(0,o.kt)("p",null,"SuperDuperDB also includes pre-baked encoders in ",(0,o.kt)("inlineCode",{parentName:"p"},"superduperdb.encoders"),".\nFor example, images may be encoded with ",(0,o.kt)("inlineCode",{parentName:"p"},"superduperdb.encoders.pillow.image.pil_image"),"\nEncoders make it possible to encode Python objects inserted into the database, with\njust a few modifications of a standard insert:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb.encoders.pillow.image import pil_image as i\nfrom superduperdb.db.mongodb.query import Collection\nfrom superduperdb.container.documents import Document as D\n\ncoll = Collection('documents')\npaths = glob.glob('images/*.png')\ndb.execute(\n    coll.insert_many([\n        D({'img': i(PIL.Image.open(img_path))})\n        for img_path in paths\n    ], encoders=(i,))\n)\n")),(0,o.kt)("p",null,"Encoders in use with the database may be displayed with ",(0,o.kt)("inlineCode",{parentName:"p"},"db.show"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"db.show('encoder')\n['pil_image']\n")),(0,o.kt)("p",null,"Given that we have setup our encoders and data in this way, when we reload our data, using database queries, the data is reloaded in the same format we saved in:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"db.execute(coll.find_one())['img']\n<PIL.PngImagePlugin.PngImageFile image mode=RGBA size=1164x860>\n")),(0,o.kt)("p",null,"SuperDuperDB may now be used to use this downstream in models which require these complex datatypes as\ninputs and/ or outputs."))}u.isMDXComponent=!0}}]);