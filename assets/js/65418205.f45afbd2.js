"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[5760],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>b});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(a),m=r,b=c["".concat(d,".").concat(m)]||c[m]||u[m]||o;return a?n.createElement(b,i(i({ref:t},s),{},{components:a})):n.createElement(b,i({ref:t},s))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},78124:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const o={sidebar_position:1},i="DB",l={unversionedId:"docs/usage/db",id:"docs/usage/db",title:"DB",description:"The DB is the primary interface from Python to your data+AI.",source:"@site/content/docs/usage/db.md",sourceDirName:"docs/usage",slug:"/docs/usage/db",permalink:"/docs/docs/usage/db",draft:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/tree/main/docs/content/docs/usage/db.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/docs/category/usage"},next:{title:"Encoders",permalink:"/docs/docs/usage/encoders"}},d={},p=[{value:"Databackend",id:"databackend",level:2},{value:"Artifact Store",id:"artifact-store",level:2},{value:"Metadata Store",id:"metadata-store",level:2}],s={toc:p},c="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"db"},"DB"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"DB")," is the primary interface from Python to your data+AI.")),(0,r.kt)("p",null,"The central object for communicating with your datastore in SuperDuperDB is the ",(0,r.kt)("inlineCode",{parentName:"p"},"DB")," class."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"DB")," object combines 4 basic functionalities involved in integrating AI to the database:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Querying, updating and inserting data "),(0,r.kt)("li",{parentName:"ul"},"Uploading and saving AI models and associated functionality involving large data-blobs"),(0,r.kt)("li",{parentName:"ul"},"Saving metadata related to AI models and associated functionality"),(0,r.kt)("li",{parentName:"ul"},"(Optional) performing vector search on the database using configured AI models")),(0,r.kt)("p",null,"Correspondingly a database may be built by passing these 4 items to the ",(0,r.kt)("inlineCode",{parentName:"p"},"DB.__init__")," method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb.db.base.db import DB\nfrom superduperdb.db.mongodb.data_backend import MongoDatabackend\nfrom superduperdb.db.mongodb.metadata import MongoMetaDataStore\nfrom superduperdb.db.mongodb.artifacts import MongoArtifactStore\nfrom superduperdb.vector_search.lancedb_client import LanceVectorIndex\n\nimport pymongo\n\nmongo_client = pymongo.MongoClient()\nmy_databackend = MongoDatabackend(mongo_client, name='test_db')\nmy_metadata = MongoMetaDataStore(mongo_client, name='test_db')\nmy_artifact_store = MongoArtifactStore(mongo_client, name='_filesystem:test_db')\nvector_database = LanceVectorIndex(uri='~/.lancedb')\n\ndb = DB(\n    data_backend=my_databackend,\n    metadata=my_metadata_store,\n    artifact_store=my_artifact_store,\n    vector_database=my_vector_database,\n)\n")),(0,r.kt)("p",null,"Connecting these 4 elements in this way can be slightly tedious, so we provide a helper function to do this on\nthe basis of the current configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb.db.base.build import build_datalayer\n\ndb = build_datalayer()\n")),(0,r.kt)("p",null,"In order to build a database based on defaults, a one-size-fits-all wrapper is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb import superduper\n\ndb = superduper(pymongo.MongoClient().test_db)\n")),(0,r.kt)("h2",{id:"databackend"},"Databackend"),(0,r.kt)("p",null,"Currently we support:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.mongodb.com/"},"MongoDB")),(0,r.kt)("li",{parentName:"ul"},"(Experimental) Any databackend supported by the ",(0,r.kt)("a",{parentName:"li",href:"https://ibis-project.org/"},"Ibis project"),", including:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.sqlite.org/index.html"},"SQLite")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.postgresql.org/"},"PostgreSQL")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.snowflake.com/en/"},"Snowflake")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://duckdb.org/"},"DuckDB")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://pandas.pydata.org/"},"Pandas")),(0,r.kt)("li",{parentName:"ul"},"... many more")))),(0,r.kt)("h2",{id:"artifact-store"},"Artifact Store"),(0,r.kt)("p",null,"Currently we support:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MongoDB via ",(0,r.kt)("inlineCode",{parentName:"li"},"gridfs")),(0,r.kt)("li",{parentName:"ul"},"Local filesystem")),(0,r.kt)("h2",{id:"metadata-store"},"Metadata Store"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MongoDB"),(0,r.kt)("li",{parentName:"ul"},"Any SQL database supported by SQLAlchemy")))}u.isMDXComponent=!0}}]);