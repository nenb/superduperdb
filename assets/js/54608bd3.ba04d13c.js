"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[3390],{3905:(e,r,n)=>{n.d(r,{Zo:()=>i,kt:()=>f});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function p(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),u=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},i=function(e){var r=u(e.components);return t.createElement(c.Provider,{value:r},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),l=u(n),m=o,f=l["".concat(c,".").concat(m)]||l[m]||d[m]||a;return n?t.createElement(f,s(s({ref:r},i),{},{components:n})):t.createElement(f,s({ref:r},i))}));function f(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var p={};for(var c in r)hasOwnProperty.call(r,c)&&(p[c]=r[c]);p.originalType=e,p[l]="string"==typeof e?e:o,s[1]=p;for(var u=2;u<a;u++)s[u]=n[u];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},64222:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>u});var t=n(87462),o=(n(67294),n(3905));const a={},s="MongoDB Atlas vector-search with SuperDuperDB",p={unversionedId:"use_cases/items/atlas_vector_search",id:"use_cases/items/atlas_vector_search",title:"MongoDB Atlas vector-search with SuperDuperDB",description:"",source:"@site/content/use_cases/items/atlas_vector_search.md",sourceDirName:"use_cases/items",slug:"/use_cases/items/atlas_vector_search",permalink:"/docs/use_cases/items/atlas_vector_search",draft:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/tree/main/docs/content/use_cases/items/atlas_vector_search.md",tags:[],version:"current",frontMatter:{},sidebar:"useCasesSidebar",previous:{title:"Use-cases",permalink:"/docs/category/use-cases"},next:{title:"Turn your classical-database into a vector-database with SuperDuperDB",permalink:"/docs/use_cases/items/compare_vector_search_solutions"}},c={},u=[],i={toc:u},l="wrapper";function d(e){let{components:r,...n}=e;return(0,o.kt)(l,(0,t.Z)({},i,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"mongodb-atlas-vector-search-with-superduperdb"},"MongoDB Atlas vector-search with SuperDuperDB"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"!pip install superduperdb\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"!curl -O https://superduperdb-public.s3.eu-west-1.amazonaws.com/pymongo.json\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import os\n\nos.environ['OPENAI_API_KEY'] = '<YOUR-OPEN-AI-API-KEY-HERE>'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import pymongo\nfrom superduperdb import superduper\n\ndb = pymongo.MongoClient().pymongo_docs\n    \ndb = superduper(db)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import json\nfrom superduperdb.db.mongodb.query import Collection\nfrom superduperdb.container.document import Document as D\n\nwith open('pymongo.json') as f:\n    data = json.load(f)\n\ndb.execute(Collection('documents').insert_many([D(r) for r in data]))\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb.container.vector_index import VectorIndex\nfrom superduperdb.container.listener import Listener\nfrom superduperdb.ext.numpy.array import array\nfrom superduperdb.ext.openai.model import OpenAIEmbedding\n\n\nmodel = OpenAIEmbedding(model='text-embedding-ada-002')\n\ndb.add(\n    VectorIndex(\n        identifier=f'pymongo-docs',\n        indexing_listener=Listener(\n            model=model,\n            key='value',\n            select=Collection('documents').find(),\n            predict_kwargs={'max_chunk_size': 1000},\n        ),\n    )\n)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb.db.mongodb.query import Collection\nfrom superduperdb.container.document import Document as D\nfrom IPython.display import *\n\nquery = 'Find data'\n\nresult = db.execute(\n    Collection('documents')\n        .like(D({'value': query}), vector_index='pymongo-docs', n=5)\n        .find()\n)\n\nfor r in result:\n    display(Markdown(f'### `{r[\"parent\"] + \".\" if r[\"parent\"] else \"\"}{r[\"res\"]}`'))\n    display(Markdown(r['value']))\n")))}d.isMDXComponent=!0}}]);